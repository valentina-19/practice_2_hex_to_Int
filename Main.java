package practice_2;

import java.math.BigInteger;

public class Main {
	
	

	
	public static void main(String[] args) {
		// TODO Auto-generated method stub
		
		String vector1Value = "0xff00000000000000000000000000000000000000000000000000000000000000";
		System.out.println("Vector 1:");
		System.out.println("   i.           Value: " + vector1Value);
		System.out.println("  ii. Number of bytes: " + HexToInt.getBytesCount(vector1Value));
		System.out.println(" iii.   Little-endian: " + HexToInt.convertHexToLE(vector1Value));
		System.out.println("  iv.      Big-endian: " + HexToInt.convertHexToBE(vector1Value));	
		System.out.println(" Little-endian to HEX: " + HexToInt.convertLEtoHex(new BigInteger("255"),32));
		System.out.println("    Big-endian to HEX: " + HexToInt.convertBEtoHex(new BigInteger("115339776388732929035197660848497720713218148788040405586178452820382218977280"),32));	
		System.out.println("--------------------------------------------------------------------------");
		String vector2Value = "0xaaaa000000000000000000000000000000000000000000000000000000000000";
		System.out.println("Vector 2:");
		System.out.println("   i.           Value: " + vector2Value);
		System.out.println("  ii. Number of bytes: " + HexToInt.getBytesCount(vector2Value));
		System.out.println(" iii.   Little-endian: " + HexToInt.convertHexToLE(vector2Value));
		System.out.println("  iv.      Big-endian: " + HexToInt.convertHexToBE(vector2Value));	
		System.out.println(" Little-endian to HEX: " + HexToInt.convertLEtoHex(new BigInteger("43690"),32));
		System.out.println("    Big-endian to HEX: " + HexToInt.convertBEtoHex(new BigInteger("77193548260167611359494267807458109956502771454495792280332974934474558013440"),32));
		System.out.println("--------------------------------------------------------------------------");
		System.out.println("Vector 3:");
		String vector3Value = "0xFFFFFFFF";
		System.out.println("   i.           Value: " + vector3Value);
		System.out.println("  ii. Number of bytes: " + HexToInt.getBytesCount(vector3Value));
		System.out.println(" iii.   Little-endian: " + HexToInt.convertHexToLE(vector3Value));
		System.out.println("  iv.      Big-endian: " + HexToInt.convertHexToBE(vector3Value));	
		System.out.println(" Little-endian to HEX: " + HexToInt.convertLEtoHex(new BigInteger("4294967295"),4));
		System.out.println("    Big-endian to HEX: " + HexToInt.convertBEtoHex(new BigInteger("4294967295"),4));
		System.out.println("--------------------------------------------------------------------------");
		System.out.println("Vector 4:");
		String vector4Value = "0x
		System.out.println("   i.           Value: " + vector4Value);
		System.out.println("  ii. Number of bytes: " + HexToInt.getBytesCount(vector4Value));
		System.out.println(" iii.   Little-endian: " + HexToInt.convertHexToLE(vector4Value));
		System.out.println("  iv.      Big-endian: " + HexToInt.convertHexToBE(vector4Value));	
		System.out.println(" Little-endian to HEX: " + HexToInt.convertLEtoHex(new BigInteger("240"),512));
		System.out.println("    Big-endian to HEX: " + HexToInt.convertBEtoHex(new BigInteger("979114576324830475023518166296835358668716483481922294110218890578706788723335115795775136189060210944584475044786808910613350098299181506809283832360654948074334665509728123444088990750984735919776315636114949587227798911935355699067813766573049953903257414411690972566828795693861196044813729172123152193769005290826676049325224028303369631812105737593272002471587527915367835952474124875982077070337970837392460768423348044782340688207323630599527945406427226264695390995320400314062984891593411332752703846859640346323687201762934524222363836094053204269986087043470117703336873406636573235808683444836432453459818599293667760149123595668832133083221407128310342064668595954073131257995767262426534143159642539179485013975461689493733866106312135829807129162654188209922755829012304582671671519678313609748646814745057724363462189490278183457296449014163077506949636570237334109910914728582640301294341605533983878368789071427913184794906223657920124153256147359625549743656058746335124502376663710766611046750739680547042183503568549468592703882095207981161012224965829605768300297615939788368703353944514111011011184191740295491255291545096680705534063721012625490368756140460791685877738232879406346334603566914069127957053440"),512));
		                                                                                 

	}

}
